@page "/finalizarcompra"
@page "/finalizarcompra/{idkart:int}/{idcli:int}"

@inject IVendaService VendaService
@inject IClienteService ClientService
@inject ICarrinhoService CarrinhoService
@inject ICarrinhoProdService CarrinhoProdService
@inject NavigationManager NavigationManager

<header>
    <link rel="stylesheet" href="icons/icons/css/all.css">
    <link rel="stylesheet" href="css/Login.css">
    <img src="logo.png" alt="BeFeira Logo">
    <i class="fa-solid fa-circle-user"></i>
</header>

<body>
    <div class="container">
        <div class="forms">
            <EditForm Model="@c">
            <div class="form-content" style="justify-content: center">
                <div class="login-form">
                    <div>Realizar pagamento</div>
                        <div class="input-boxes">
                            <div class="input-box">
                                <input type="text" placeholder="MBWay ou Iban" @bind-value =c.Pagamento required>
                            </div>
                            <div class="input-box">
                                <input type="text" placeholder="Morada" @bind-value=c.Morada required>
                            </div>
            
                            <div class="button input-box">
                                <input type="submit"@onclick="compra" value="Comprar">
                            </div>
                           
                        </div>
                </div>
            </div>
            </EditForm>
        </div>
    </div>
    <button class="botao_voltar_bottom" @onclick="(()=>goback())">Voltar</button>
</body>

@code {
    [Parameter]
    public int? idcli { get; set; }

    [Parameter]
    public int? idkart { get; set; }

    [Parameter]
    public string? uname { get; set; }

    private Venda c = new Venda { };



    protected override async Task OnInitializedAsync()
    {
        await CarrinhoService.getCarrinhos();
        await CarrinhoProdService.getCarrinhosProd();
        if (idcli == -1)
        {
            uname = "Guest";
        }
        else
        {

            Cliente cli = await ClientService.GetSingleCliente((int)idcli);
            uname = cli.Username;


        }
    }



    public void goback()
    {
        NavigationManager.NavigateTo($"/carrinhopage/{idcli}/{"feirapage"}");
    }

    public async  void compra()
    {
        c.Total = await CarrinhoProdService.getPrecoKart((int)idkart);
        c.CarrinhoID = idkart;

        await VendaService.AddVenda(c);
        await CarrinhoProdService.deleteprodutoskart((int)idkart);
        NavigationManager.NavigateTo($"/mainpage/{idcli}");
    }

}
