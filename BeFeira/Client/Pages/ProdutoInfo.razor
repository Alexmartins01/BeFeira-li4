@page "/produtoinfo"
@page "/produtoinfo/{idproduto:int}/{idfeira:int}/{idcliente:int}/{search}"
@page "/produtoinfo/{idproduto:int}/{idsubcategoria:int}/{idstand:int}/{idfeira:int}/{fromStand:int}/{idcliente:int}"
@using BeFeira.Client.Services.CarrinhoProdServices;
@using BeFeira.Client.Services.CarrinhoServices;

@inject IProdutoService ProdutoService
@inject ICarrinhoProdService CarrinhoProdService
@inject ICarrinhoService CarrinhoService
@inject IClienteService ClientService
@inject NavigationManager NavigationManager




<header>
    <link rel="stylesheet" href="icons/icons/css/all.css">
    <link rel="stylesheet" href="css/mainpage.css">

    <img src="logo.png" @onclick="(()=>gomain())" alt="BeFeira Logo">
    <div class="user_header_info">
        <h1>@name</h1>
        <i class="fa-solid fa-cart-shopping" @onclick="(()=>ShowKart())"></i>
    </div>
    <button class="u"><i class="fa-solid fa-circle-user" @onclick="(()=>gouser())" alt=""></i></button>
</header>


<body class="produtos_stand_container">

        <div class="produto_basic_info" style="height: fit-content; margin: 0 200px 0 200px">
        <img src="@prod.UrlImage" alt="Imagem do produto">
            <p class="nome_produto">@prod.Nome_Produto</p>
        @if (prod.Promocao!= 0)
        {
            <p class="preco_page_produto">Preço:  <del>@String.Format("{0}",prod.Preco.ToString("0.00"))</del> @String.Format("{0}",(prod.Preco * (1 - (float)prod.Promocao/100)).ToString("0.00"))€</p>
            <p class="promocao_produto"> @String.Format("Promoção: {0}%",prod.Promocao)</p>
        } else
        {
            <p class="preco_page_produto">Preço: @String.Format("{0}",prod.Preco.ToString("0.00"))€</p>

        }
        <p class="stock_produto">@String.Format("Stock: {0} uni.",prod.Stock)</p>
        <p>Rating:</p>
        @switch (prod.Rating)
        {
            case 0:
                <i class="fa-regular fa-star"></i>
                        <i class="fa-regular fa-star"></i>
                                <i class="fa-regular fa-star"></i>
                                        <i class="fa-regular fa-star"></i>
                                                <i class="fa-regular fa-star"></i>
                break;

            case 1:
                    <i class="fa-solid fa-star"></i>
                        <i class="fa-regular fa-star"></i>
                                <i class="fa-regular fa-star"></i>
                                        <i class="fa-regular fa-star"></i>
                                                <i class="fa-regular fa-star"></i>
                break;
            case 2:
                    <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star"></i>
                                <i class="fa-regular fa-star"></i>
                                        <i class="fa-regular fa-star"></i>
                                                <i class="fa-regular fa-star"></i>
                break;
            case 3:
                    <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star"></i>
                                <i class="fa-solid fa-star"></i>
                                        <i class="fa-regular fa-star"></i>
                                                <i class="fa-regular fa-star"></i>
                break;
            case 4:
                    <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star"></i>
                                <i class="fa-solid fa-star"></i>
                                        <i class="fa-solid fa-star"></i>
                                                <i class="fa-regular fa-star"></i>
                break;
            case 5:
                    <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star"></i>
                                <i class="fa-solid fa-star"></i>
                                        <i class="fa-solid fa-star"></i>
                                                <i class="fa-solid fa-star"></i>
                break;

        }
        <div class="produto_basic_info_buttons">
            <button>
                <i class="fas fa-shopping-cart" @onclick="(()=>addtokart(prod))"></i></button>
            </div>
            
        </div>

    <button class="botao_voltar_bottom" @onclick="(()=>goback())">Voltar</button>

</body>

@code 
{

    [Parameter]
    public int? idfeira { get; set; }

    [Parameter]
    public int? idstand { get; set; }

    [Parameter]
    public int? idsubcategoria { get; set; }

    [Parameter]
    public int? fromStand { get; set; }

    [Parameter]
    public int? idproduto { get; set; }

    [Parameter]
    public int? idcliente { get; set; }


    [Parameter]
    public string? search { get; set; }

    public Produto prod = new Produto { };

    public string? name;
    public Cliente? c;


    private int k;



    protected override async Task OnInitializedAsync()
    {
        await CarrinhoService.getCarrinhos();
        await ProdutoService.GetProdutos();
        if (idcliente == -1) name = "Guest";
        else
        {
            c = await ClientService.GetSingleCliente((int)idcliente);
            name = c.Username;
            k = await CarrinhoService.ExistsCarrinho((int)idcliente);
        }
    }

    async void addtokart(Produto p)
    {
        if (idcliente != -1)
        {
            if (k > 0)
            {
                float auxiliar = p.Preco;
                if (p.Promocao != 0)
                {
                    auxiliar=  (p.Preco * (1 - (float)p.Promocao / 100));
                }
                CarrinhoProduto a = new CarrinhoProduto { CarrinhoID = k, ProdutoID = p.ID, Quantidade = 1, Preco = auxiliar, TaxaBefeira = 10 };
                await CarrinhoProdService.AddCarrinhoProduto(a);
                Carrinho novo = await CarrinhoService.GetsingleCarrinho(k);
            


            }
            else
            {
                float auxiliar = p.Preco;
                if (p.Promocao != 0)
                {
                    auxiliar = (p.Preco * (1 - (float)p.Promocao / 100));
                }

                Carrinho novo = new Carrinho { ClienteID = idcliente, Total = (decimal)auxiliar };
                await CarrinhoService.AddCarrinho(novo);
                k = await CarrinhoService.ExistsCarrinho((int)idcliente);
                CarrinhoProduto a = new CarrinhoProduto { CarrinhoID = k, ProdutoID = p.ID, Quantidade = 1, Preco = auxiliar, TaxaBefeira = 10 };
                await CarrinhoProdService.AddCarrinhoProduto(a);
            }
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (idproduto == null)
        {

        }
        else
        {
            prod = await ProdutoService.GetSingleProd((int)idproduto);

        }
    }
    void gomain()
    {
        NavigationManager.NavigateTo($"mainpage/{idcliente}");
    }

    void gouser()
    {
        NavigationManager.NavigateTo($"userinfo/{idcliente}");
    }



    void goback()
    {
        if (fromStand!=null)
        {
            if(fromStand!=1)
            {
                NavigationManager.NavigateTo($"produtopage/{idfeira}/{idstand}/{idsubcategoria}/{idcliente}");    
            }
            else
            {
                NavigationManager.NavigateTo($"standpage/{idfeira}/{idstand}/{idcliente}");
            }

        }
        else
        {
            NavigationManager.NavigateTo($"produtopage2/{idfeira}/{idcliente}/{search}");
        }
    }

    void ShowKart()
    {
        if (idsubcategoria !=null) NavigationManager.NavigateTo($"/carrinhopage/{idcliente}/{idfeira}/{idstand}/{idsubcategoria}/{idproduto}/produtoinfo");
        else NavigationManager.NavigateTo($"/carrinhopage/{idcliente}/{idfeira}/{idproduto}/produtoinfo2/{search}");
    }
}
