@page "/feirapage"
@page "/feirapage/{id:int}/{idcliente:int}"
@inject IStandService StandService
@inject IVendedorService VendedorService
@inject ISubcatserv s
@inject IFeiraService SFeiraService
@inject IClienteService ClientService
@inject IProdutoService ProdutoService
@inject NavigationManager NavigationManager


<PageTitle> Feirapage </PageTitle>

@if (id == null)
{
	

}
else {

<header>
    <link rel="stylesheet" href="icons/icons/css/all.css">
    <link rel="stylesheet" href="css/mainpage.css">

		<img src="logo.png" @onclick="(()=>gomain())" alt="BeFeira Logo">
		<div class="user_header_info">
			<h1>@name</h1>
			<i class="fa-solid fa-cart-shopping" @onclick="(()=>ShowKart())"></i>
		</div>
		<button class="u"><i class="fa-solid fa-circle-user" @onclick="(()=>gouser())" alt=""></i></button>
</header>

<body class="feira_container">
    <div class="search_container">
		<Editform Model = "@searchProdName">
        <div class="search_bar">
            <input class="search_input" type="text" @bind-value=searchProdName placeholder="Search">
					<button id="search" @onclick="Submit"><i id="b" class="fa fa-search"></i></button>
        </div>
			</Editform>
    </div>
    <h3>@String.Format("Feira de {0}",f.Categoria)</h3>
    <div class="feira_stands_container">
        @foreach (var std in stands)
        {
            <div class="feira_stand_container" @onclick="(() => ShowBarraca(std.ID))">
                <p class="stand_name">@std.Nome</p>
                <p class="vendedor_name">(@std.Vendedor.Username)</p>
            </div>
        }
    </div>
    <button class="botao_voltar_bottom" @onclick="(() => goback())">Voltar</button>
</body>

}
@code {

	Feira f = new Feira {};
	List<Stand> stands=new List<Stand>{};


	[Parameter]
	public int? id { get; set; }

	[Parameter]
	public int? idcliente { get; set; }

	public string name;
	public Cliente c;
	public string searchProdName;

	protected override async Task OnParametersSetAsync()
	{
		if (id == null)
		{

		}
		else
		{
			f = await SFeiraService.GetSingleFeira((int)id);
			stands = await StandService.GetStandsByFeira((int)id);
			if (idcliente == -1) name = "Guest";
			else
			{
				c = await ClientService.GetSingleCliente((int)idcliente);
				name = c.Username;
			}
		}
	}

	protected override async Task OnInitializedAsync()
	{
		await VendedorService.GetVendedores();
		await StandService.GetStands();
	}
	void ShowBarraca(int idstand)
	{
		NavigationManager.NavigateTo($"standpage/{id}/{idstand}/{idcliente}");
	}
	void goback()
	{
		NavigationManager.NavigateTo($"mainpage/{idcliente}");
	}

	void gomain()
	{
		NavigationManager.NavigateTo($"mainpage/{idcliente}");
	}


	void gouser()
	{
		NavigationManager.NavigateTo($"userinfo/{idcliente}");
	}


	private async void Submit()
	{
		if (searchProdName!=null)
		{
			NavigationManager.NavigateTo($"produtopage2/{id}/{idcliente}/{searchProdName}");
		}
	}
	void ShowKart()
	{
		NavigationManager.NavigateTo($"/carrinhopage/{idcliente}/{id}/feirapage");

	}

}