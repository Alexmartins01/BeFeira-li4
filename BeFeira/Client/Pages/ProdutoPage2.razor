@page "/produtopage2"
@page "/produtopage2/{idfeira:int}/{idcliente:int}/{search}"

@inject IProdutoService ProdutoService
@inject IClienteService ClientService
@inject IStandService StandService
@inject ISubcatserv SubcatService
@inject ICarrinhoProdService CarrinhoProdService
@inject ICarrinhoService CarrinhoService
@inject NavigationManager NavigationManager




<header>
    <link rel="stylesheet" href="icons/icons/css/all.css">
    <link rel="stylesheet" href="css/mainpage.css">

    <img src="logo.png" @onclick="(()=>gomain())" alt="BeFeira Logo">
    <div class="user_header_info">
        <h1>@name</h1>
        <i class="fa-solid fa-cart-shopping" @onclick="(()=>ShowKart())"></i>
    </div>
    <button class="u"><i class="fa-solid fa-circle-user" @onclick="(()=>gouser())" alt=""></i></button>
</header>


<body class="produtos_stand_container">


    <div class="lista_produtos">

        @foreach (var produto in prods)
        {
            <div class="produto_basic_info">
                <img src="@produto.UrlImage" alt="Imagem do produto">
                <p class="nome_produto">@produto.Nome_Produto</p>
                @if (produto.Promocao!= 0)
                {
                    <p class="preco_small_produto">Preço:  <del>@String.Format("{0}",produto.Preco.ToString("0.00"))</del> @String.Format("{0}",(produto.Preco * (1 - (float)produto.Promocao/100)).ToString("0.00"))€</p>
                } else
                {
                    <p class="preco_small_produto">Preço: @String.Format("{0}",produto.Preco.ToString("0.00"))€</p>

                }
                <p class="stock_produto">@String.Format("{0}",produto.Stock>0 ? "Disponível":"Indísponível")</p> <!--se stock > 0-->
                <div class="produto_basic_info_buttons">
                    <button><i class="fa-solid fa-circle-info" @onclick="(()=>showProdInfo(produto.ID))"></i></button>
                    <button @onclick="(()=>addtokart(produto))"><i class="fas fa-shopping-cart"></i></button>
                </div>

            </div>
        }

    </div>

    <button class="botao_voltar_bottom" @onclick="(()=>goback())">Voltar</button>

</body>

@code {
    List<Produto> prods = new List<Produto>();


    [Parameter]
    public int? idfeira { get; set; }


    [Parameter]
    public int? idcliente { get; set; }

    [Parameter]
    public string? search { get; set; }

    public string name;
    public Cliente c;
    public int k;

    protected override async Task OnInitializedAsync()
    {
        await ProdutoService.GetProdutos();
        if (idcliente == -1) name = "Guest";
        else
        {
            c = await ClientService.GetSingleCliente((int)idcliente);
            name = c.Username;
        }
    }



    protected override async Task OnParametersSetAsync()
    {
        if (search == null)
        {

        }
        else
        {
            prods = await ProdutoService.GetProdutosBySearch(search,(int)idfeira);
        }
    }

    void ShowKart()
    {
        NavigationManager.NavigateTo($"/carrinhopage/{idcliente}/{idfeira}/produtopage2/{search}");
    }

    void goback()
    {
        NavigationManager.NavigateTo($"feirapage/{idfeira}/{idcliente}");
    }

    void gomain()
    {
        NavigationManager.NavigateTo($"mainpage/{idcliente}");
    }

    void gouser()
    {
        NavigationManager.NavigateTo($"userinfo/{idcliente}");
    }


    void showProdInfo(int prod)
    {
        NavigationManager.NavigateTo($"produtoinfo/{prod}/{idfeira}/{idcliente}/{search}");
    }


    async void addtokart(Produto p)
    {
        if (idcliente != -1)
        {
            if (k > 0)
            {

                float auxiliar = p.Preco;
                if (p.Promocao != 0)
                {
                    auxiliar = (p.Preco * (1 - (float)p.Promocao / 100));
                }
                CarrinhoProduto a = new CarrinhoProduto { CarrinhoID = k, ProdutoID = p.ID, Quantidade = 1, Preco = auxiliar, TaxaBefeira = 10 };
                await CarrinhoProdService.AddCarrinhoProduto(a);

            }
            else
            {
                float auxiliar = p.Preco;
                if (p.Promocao != 0)
                {
                    auxiliar = (p.Preco * (1 - (float)p.Promocao / 100));
                }
                Carrinho novo = new Carrinho { ClienteID = idcliente, Total = (decimal) auxiliar };
                await CarrinhoService.AddCarrinho(novo);
                k = await CarrinhoService.ExistsCarrinho((int)idcliente);
                CarrinhoProduto a = new CarrinhoProduto { CarrinhoID = k, ProdutoID = p.ID, Quantidade = 1, Preco = auxiliar, TaxaBefeira = 10 };
                await CarrinhoProdService.AddCarrinhoProduto(a);
            }
        }
    }
}
