@page "/standpage"
@page "/standpage/{idfeira:int}/{idbarraca:int}"

@inject IProdutoService ProdutoService
@inject ISubcatserv SubCatService
@inject IStandService StandService
@inject NavigationManager  NavigationManager

<header>
    <link rel="stylesheet" href="icons/icons/css/all.css">
    <link rel="stylesheet" href="css/mainpage.css">

    <img src="logo.png" alt="BeFeira Logo">
    <div class="user_header_info">
        <h1>Guest</h1>
        <i class="fa-solid fa-cart-shopping"></i>
    </div>
    <i class="fa-solid fa-circle-user"></i>
</header>

<body class="stand_page_container">

    <h1 class="products_stand_name">@stand.Nome</h1>

    <div class="subcategorias_container">



        
        @foreach (var subcat in subcats)
        {
           
                <div class="subcategoria_container">

                    <h3>@subcat.Descricao</h3>
                @foreach (var prod in produtos_subcats[n])
                {
              
                        <p>@prod.Nome_Produto</p>
                    {
                        n++;
                    }


            }

            </div>
            
        }

    </div>

    <button class="botao_voltar_bottom">Voltar</button>

</body>

@code {
    int n = 0;
    int l = 0;
    Stand stand = new Stand { };
    List<Subcategoria> subcats = new List<Subcategoria> { };
    List<List<Produto>> produtos_subcats = new List<List<Produto>>();




    [Parameter]
    public int? idfeira { get; set; }

     [Parameter]
    public int? idbarraca { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await ProdutoService.GetProdutos();
        await SubCatService.GetSubcats();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (idbarraca == null)
        {

        }
        else
        {
            stand = await StandService.GetSingleStand((int)idbarraca);
            subcats = await SubCatService.GetSubcatsByStand((int)idbarraca);
            int i = 0;
            foreach(var p in subcats)
            {
                produtos_subcats.Add(await ProdutoService.GetProdutosBySubcat4(p.ID));
                i++;
            }
           

        }
    }

    // Código para testes

 

   /*

     @for (int i = 0; i < 4 && i < produtos_subcats[subcat.ID].Count; i++)
                     {

                     <p>@produtos_subcats[subcat.ID][i]</p>
    }


    List<List<String>> produtos_subcats = new List<List<String>>
         {

     new List<String>
        {
        "Produto",
        "Produto",
        "Produto",
        "Produto",
        "Produto",
        "Produto",
        "Produto",
        "Produto",
        "Produto",
     "Produto"
     },

     new List<String>
        {
        "Produto",
        "Produto",
     "Produto"
     },

     new List<String>
        {
        "Produto",
        "Produto",
        "Produto",
     "Produto"
     },

     new List<String>
        {
        "Produto",
        "Produto",
        "Produto",
        "Produto",
        "Produto",
        "Produto",
     "Produto"
     },

     new List<String>
        {
        "Produto",
     "Produto"
         }
    };*/
}
