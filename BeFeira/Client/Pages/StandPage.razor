@page "/standpage"
@page "/standpage/{idfeira:int}/{idbarraca:int}/{idcliente:int}"

@inject IProdutoService ProdutoService
@inject ISubcatserv SubCatService
@inject IStandService StandService
@inject IClienteService ClientService
@inject NavigationManager  NavigationManager

<header>
    <link rel="stylesheet" href="icons/icons/css/all.css">
    <link rel="stylesheet" href="css/mainpage.css">

    <img src="logo.png" @onclick="(()=>gomain())" alt="BeFeira Logo">
    <div class="user_header_info">
        <h1>@name</h1>
        <i class="fa-solid fa-cart-shopping"></i>
    </div>
    <i class="fa-solid fa-circle-user"></i>
</header>

<body class="stand_page_container">

    <h1 class="products_stand_name" >@stand.Nome</h1>

    <div class="subcategorias_container">



        
        @foreach (var subcat in subcats)
        {

            <div class="subcategoria_container" >

                <h3 @onclick="(()=>ShowProductsCategory(subcat.ID))">  @subcat.Descricao  </h3>
                @foreach (var prod in produtos_subcats[subcat.ID])
                {
              
                    <p @onclick="(()=>showProdInfo(subcat.ID,prod.ID))">@prod.Nome_Produto</p>
                }

            </div>
        }

    </div>
    <button class="botao_voltar_bottom" @onclick="(()=>goBack((int)idfeira))" >Voltar</button>

</body>

@code {
    int n = 0;
    Stand stand = new Stand { };
    List<Subcategoria> subcats = new List<Subcategoria> { };
    Dictionary<int, List<Produto>> produtos_subcats = new Dictionary<int, List<Produto>>();



    [Parameter]
    public int? idfeira { get; set; }

    [Parameter]
    public int? idbarraca { get; set; }

    [Parameter]
    public int? idcliente { get; set; }
    public string name;
    public Cliente c;


    protected override async Task OnInitializedAsync()
    {
        await ProdutoService.GetProdutos();
        await SubCatService.GetSubcats();
        if (idcliente == -1) name = "Guest";
        else
        {
        c = await ClientService.GetSingleCliente((int)idcliente);
        name = c.Username;
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (idbarraca == null)
        {

        }
        else
        {
            stand = await StandService.GetSingleStand((int)idbarraca);
            subcats = await SubCatService.GetSubcatsByStand((int)idbarraca);
            foreach(var sub in subcats)
            {
                produtos_subcats.Add(sub.ID, await ProdutoService.GetProdutosBySubcat4(sub.ID));
            }
        }
    }

    void ShowProductsCategory(int subcat)
    {
        NavigationManager.NavigateTo($"produtopage/{subcat}/{idbarraca}/{idfeira}/{idcliente}");
    }

    void goBack(int idfeira)
    {
        NavigationManager.NavigateTo($"feirapage/{idfeira}/{idcliente}");
    }
    void gomain()
    {
        NavigationManager.NavigateTo("mainpage");
    }

    void showProdInfo(int subcat,int prod)
    {
        NavigationManager.NavigateTo($"produtoinfo/{prod}/{subcat}/{idbarraca}/{idfeira}/1/{idcliente}");
    }

}
