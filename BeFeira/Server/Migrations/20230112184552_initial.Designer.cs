// <auto-generated />
using System;
using BeFeira.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeFeira.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230112184552_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeFeira.Shared.Administrador", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Administrador");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Createdat = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(2889),
                            Password = "1234",
                            Updatedat = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(2932),
                            Username = "Bernas"
                        },
                        new
                        {
                            ID = 2,
                            Createdat = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(2936),
                            Password = "2345",
                            Updatedat = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(2937),
                            Username = "Cebolinha"
                        },
                        new
                        {
                            ID = 3,
                            Createdat = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(2939),
                            Password = "3456",
                            Updatedat = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(2940),
                            Username = "Sergio"
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Carrinho", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("StandID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("StandID");

                    b.ToTable("Carrinho");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClienteID = 1,
                            StandID = 1,
                            Total = 0m
                        },
                        new
                        {
                            ID = 2,
                            ClienteID = 2,
                            StandID = 2,
                            Total = 10m
                        },
                        new
                        {
                            ID = 3,
                            ClienteID = 3,
                            StandID = 3,
                            Total = 5m
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.CarrinhoProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CarrinhoID")
                        .HasColumnType("int");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int?>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TaxaBefeira")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CarrinhoID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("CarrinhoProduto");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CarrinhoID = 1,
                            Preco = 10f,
                            ProdutoID = 1,
                            Quantidade = 1,
                            TaxaBefeira = 10
                        },
                        new
                        {
                            ID = 2,
                            CarrinhoID = 2,
                            Preco = 120f,
                            ProdutoID = 2,
                            Quantidade = 4,
                            TaxaBefeira = 10
                        },
                        new
                        {
                            ID = 3,
                            CarrinhoID = 3,
                            Preco = 22f,
                            ProdutoID = 3,
                            Quantidade = 2,
                            TaxaBefeira = 10
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "a@uminho.pt",
                            Password = "sporting",
                            Username = "pedro"
                        },
                        new
                        {
                            ID = 2,
                            Email = "a@uminho.pt",
                            Password = "benfica",
                            Username = "joao"
                        },
                        new
                        {
                            ID = 3,
                            Email = "a@uminho.pt",
                            Password = "porto",
                            Username = "ze"
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Feira", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Feira");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Categoria = "Casa e Decoração"
                        },
                        new
                        {
                            ID = 2,
                            Categoria = "Animais"
                        },
                        new
                        {
                            ID = 3,
                            Categoria = "Mercearia e Produtos Frescos"
                        },
                        new
                        {
                            ID = 4,
                            Categoria = "Cultura"
                        },
                        new
                        {
                            ID = 5,
                            Categoria = "Véiculos"
                        },
                        new
                        {
                            ID = 6,
                            Categoria = "Escritório"
                        },
                        new
                        {
                            ID = 7,
                            Categoria = "Moda"
                        },
                        new
                        {
                            ID = 8,
                            Categoria = "Bricolagem"
                        },
                        new
                        {
                            ID = 9,
                            Categoria = "Animais de Estimação"
                        },
                        new
                        {
                            ID = 10,
                            Categoria = "Brinquedos"
                        },
                        new
                        {
                            ID = 11,
                            Categoria = "Gaming"
                        },
                        new
                        {
                            ID = 12,
                            Categoria = "Lazer"
                        },
                        new
                        {
                            ID = 13,
                            Categoria = "Saúde"
                        },
                        new
                        {
                            ID = 14,
                            Categoria = "Beleza"
                        },
                        new
                        {
                            ID = 15,
                            Categoria = "Eletrodomésticos"
                        },
                        new
                        {
                            ID = 16,
                            Categoria = "Imagem"
                        },
                        new
                        {
                            ID = 17,
                            Categoria = "Som"
                        },
                        new
                        {
                            ID = 18,
                            Categoria = "Smartphones e Acessórios"
                        },
                        new
                        {
                            ID = 19,
                            Categoria = "Informática"
                        },
                        new
                        {
                            ID = 20,
                            Categoria = "Desporto"
                        },
                        new
                        {
                            ID = 21,
                            Categoria = "Random"
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nome_Produto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int>("Promocao")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("StandID")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoriaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StandID");

                    b.HasIndex("SubCategoriaID");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NomeProduto = "Maçãs",
                            Preco = 2.9f,
                            Promocao = 0,
                            Rating = 4,
                            StandID = 1,
                            Stock = 3,
                            SubCategoriaID = 1
                        },
                        new
                        {
                            ID = 2,
                            NomeProduto = "Bonecos",
                            Preco = 25.9f,
                            Promocao = 0,
                            Rating = 2,
                            StandID = 2,
                            Stock = 2,
                            SubCategoriaID = 2
                        },
                        new
                        {
                            ID = 3,
                            NomeProduto = "Tapetea",
                            Preco = 23.9f,
                            Promocao = 0,
                            Rating = 3,
                            StandID = 3,
                            Stock = 1,
                            SubCategoriaID = 2
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Promocao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Desconto")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("Promocao");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Date = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(3121),
                            Desconto = 10,
                            ProdutoID = 1
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Stand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("FeiraID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendedorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FeiraID");

                    b.HasIndex("VendedorID");

                    b.ToTable("Stand");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FeiraID = 1,
                            Nome = "ZaraHome",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 2,
                            FeiraID = 2,
                            Nome = "Agriloja",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 3,
                            FeiraID = 3,
                            Nome = "Pingo Doce",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 4,
                            FeiraID = 4,
                            Nome = "Bertrand",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 5,
                            FeiraID = 5,
                            Nome = "BMW",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 6,
                            FeiraID = 6,
                            Nome = "IKEA",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 7,
                            FeiraID = 7,
                            Nome = "Zara",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 8,
                            FeiraID = 8,
                            Nome = "Leroy Merlin",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 9,
                            FeiraID = 9,
                            Nome = "Animais e Companhia",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 10,
                            FeiraID = 10,
                            Nome = "ToysRus",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 11,
                            FeiraID = 11,
                            Nome = "CEX",
                            VendedorID = 2
                        },
                        new
                        {
                            ID = 12,
                            FeiraID = 12,
                            Nome = "Worten",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 13,
                            FeiraID = 13,
                            Nome = "WELLS",
                            VendedorID = 2
                        },
                        new
                        {
                            ID = 14,
                            FeiraID = 14,
                            Nome = "Perfumes e Companhia",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 15,
                            FeiraID = 15,
                            Nome = "Tien21",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 16,
                            FeiraID = 16,
                            Nome = "Canon",
                            VendedorID = 2
                        },
                        new
                        {
                            ID = 17,
                            FeiraID = 17,
                            Nome = "JBL",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 18,
                            FeiraID = 18,
                            Nome = "WortenMobile",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 19,
                            FeiraID = 19,
                            Nome = "PCDiga",
                            VendedorID = 2
                        },
                        new
                        {
                            ID = 20,
                            FeiraID = 20,
                            Nome = "SoloPorteros",
                            VendedorID = 1
                        },
                        new
                        {
                            ID = 21,
                            FeiraID = 21,
                            Nome = "Pilhas e Companhia",
                            VendedorID = 1
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Subcategoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StandID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StandID");

                    b.ToTable("Subcategoria");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Descricao = "Casa de Banho",
                            StandID = 1
                        },
                        new
                        {
                            ID = 2,
                            Descricao = "Sala",
                            StandID = 1
                        },
                        new
                        {
                            ID = 3,
                            Descricao = "Cozinha",
                            StandID = 1
                        },
                        new
                        {
                            ID = 4,
                            Descricao = "Rações",
                            StandID = 2
                        },
                        new
                        {
                            ID = 5,
                            Descricao = "Frangos",
                            StandID = 2
                        },
                        new
                        {
                            ID = 6,
                            Descricao = "Coelhos",
                            StandID = 2
                        },
                        new
                        {
                            ID = 7,
                            Descricao = "Higiene",
                            StandID = 3
                        },
                        new
                        {
                            ID = 8,
                            Descricao = "Talho",
                            StandID = 3
                        },
                        new
                        {
                            ID = 9,
                            Descricao = "Peixaria",
                            StandID = 3
                        },
                        new
                        {
                            ID = 10,
                            Descricao = "Terror",
                            StandID = 4
                        },
                        new
                        {
                            ID = 11,
                            Descricao = "Comédia",
                            StandID = 4
                        },
                        new
                        {
                            ID = 12,
                            Descricao = "Romance",
                            StandID = 4
                        },
                        new
                        {
                            ID = 13,
                            Descricao = "Elétricos",
                            StandID = 5
                        },
                        new
                        {
                            ID = 14,
                            Descricao = "Gasóleo",
                            StandID = 5
                        },
                        new
                        {
                            ID = 15,
                            Descricao = "Hibrídos",
                            StandID = 5
                        },
                        new
                        {
                            ID = 16,
                            Descricao = "Secretárias",
                            StandID = 6
                        },
                        new
                        {
                            ID = 17,
                            Descricao = "Tapetes",
                            StandID = 6
                        },
                        new
                        {
                            ID = 18,
                            Descricao = "Cadeiras",
                            StandID = 6
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Venda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CarrinhoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CarrinhoID");

                    b.ToTable("Venda");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CarrinhoID = 1,
                            Date = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(3160),
                            Total = 0f
                        },
                        new
                        {
                            ID = 2,
                            CarrinhoID = 2,
                            Date = new DateTime(2023, 1, 12, 18, 45, 51, 956, DateTimeKind.Local).AddTicks(3163),
                            Total = 0f
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.VendaProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int?>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TaxaBefeira")
                        .HasColumnType("int");

                    b.Property<int?>("VendaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoID");

                    b.HasIndex("VendaID");

                    b.ToTable("VendaProduto");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Preco = 10f,
                            ProdutoID = 1,
                            Quantidade = 2,
                            TaxaBefeira = 10,
                            VendaID = 1
                        },
                        new
                        {
                            ID = 2,
                            Preco = 20f,
                            ProdutoID = 3,
                            Quantidade = 3,
                            TaxaBefeira = 10,
                            VendaID = 2
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Vendedor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mbway")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vendedor");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "a@uminho.pt",
                            Iban = "1113231",
                            Mbway = "964888999",
                            Password = "0000",
                            Rating = 9,
                            Username = "Lucas"
                        },
                        new
                        {
                            ID = 2,
                            Email = "a@uminho.pt",
                            Iban = "3453661",
                            Mbway = "96282289",
                            Password = "0101",
                            Rating = 6,
                            Username = "Jonny"
                        });
                });

            modelBuilder.Entity("BeFeira.Shared.Carrinho", b =>
                {
                    b.HasOne("BeFeira.Shared.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("BeFeira.Shared.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("BeFeira.Shared.CarrinhoProduto", b =>
                {
                    b.HasOne("BeFeira.Shared.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoID");

                    b.HasOne("BeFeira.Shared.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID");

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BeFeira.Shared.Produto", b =>
                {
                    b.HasOne("BeFeira.Shared.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandID");

                    b.HasOne("BeFeira.Shared.Subcategoria", "Subcategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaID");

                    b.Navigation("Stand");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("BeFeira.Shared.Promocao", b =>
                {
                    b.HasOne("BeFeira.Shared.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BeFeira.Shared.Stand", b =>
                {
                    b.HasOne("BeFeira.Shared.Feira", "Feira")
                        .WithMany()
                        .HasForeignKey("FeiraID");

                    b.HasOne("BeFeira.Shared.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorID");

                    b.Navigation("Feira");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("BeFeira.Shared.Subcategoria", b =>
                {
                    b.HasOne("BeFeira.Shared.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandID");

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("BeFeira.Shared.Venda", b =>
                {
                    b.HasOne("BeFeira.Shared.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoID");

                    b.Navigation("Carrinho");
                });

            modelBuilder.Entity("BeFeira.Shared.VendaProduto", b =>
                {
                    b.HasOne("BeFeira.Shared.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID");

                    b.HasOne("BeFeira.Shared.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaID");

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });
#pragma warning restore 612, 618
        }
    }
}
