// <auto-generated />
using System;
using BeFeira.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeFeira.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230111111449_inital")]
    partial class inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeFeira.Shared.Administrador", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("BeFeira.Shared.Carrinho", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("StandID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("StandID");

                    b.ToTable("Carrinho");
                });

            modelBuilder.Entity("BeFeira.Shared.CarrinhoProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CarrinhoID")
                        .HasColumnType("int");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int?>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TaxaBefeira")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CarrinhoID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("CarrinhoProduto");
                });

            modelBuilder.Entity("BeFeira.Shared.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("BeFeira.Shared.Feira", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Feira");
                });

            modelBuilder.Entity("BeFeira.Shared.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nome_Produto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int>("Promocao")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("StandID")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoriaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StandID");

                    b.HasIndex("SubCategoriaID");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("BeFeira.Shared.Promocao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Desconto")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("Promocao");
                });

            modelBuilder.Entity("BeFeira.Shared.Stand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("FeiraID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendedorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FeiraID");

                    b.HasIndex("VendedorID");

                    b.ToTable("Stand");
                });

            modelBuilder.Entity("BeFeira.Shared.Subcategoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StandID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StandID");

                    b.ToTable("Subcategoria");
                });

            modelBuilder.Entity("BeFeira.Shared.Venda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CarrinhoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CarrinhoID");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("BeFeira.Shared.VendaProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int?>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TaxaBefeira")
                        .HasColumnType("int");

                    b.Property<int?>("VendaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoID");

                    b.HasIndex("VendaID");

                    b.ToTable("VendaProduto");
                });

            modelBuilder.Entity("BeFeira.Shared.Vendedor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mbway")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("BeFeira.Shared.Carrinho", b =>
                {
                    b.HasOne("BeFeira.Shared.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("BeFeira.Shared.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("BeFeira.Shared.CarrinhoProduto", b =>
                {
                    b.HasOne("BeFeira.Shared.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoID");

                    b.HasOne("BeFeira.Shared.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID");

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BeFeira.Shared.Produto", b =>
                {
                    b.HasOne("BeFeira.Shared.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandID");

                    b.HasOne("BeFeira.Shared.Subcategoria", "Subcategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaID");

                    b.Navigation("Stand");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("BeFeira.Shared.Promocao", b =>
                {
                    b.HasOne("BeFeira.Shared.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BeFeira.Shared.Stand", b =>
                {
                    b.HasOne("BeFeira.Shared.Feira", "Feira")
                        .WithMany()
                        .HasForeignKey("FeiraID");

                    b.HasOne("BeFeira.Shared.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorID");

                    b.Navigation("Feira");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("BeFeira.Shared.Subcategoria", b =>
                {
                    b.HasOne("BeFeira.Shared.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandID");

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("BeFeira.Shared.Venda", b =>
                {
                    b.HasOne("BeFeira.Shared.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoID");

                    b.Navigation("Carrinho");
                });

            modelBuilder.Entity("BeFeira.Shared.VendaProduto", b =>
                {
                    b.HasOne("BeFeira.Shared.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID");

                    b.HasOne("BeFeira.Shared.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaID");

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });
#pragma warning restore 612, 618
        }
    }
}
